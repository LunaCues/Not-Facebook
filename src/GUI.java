import java.io.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;

/**
 * GUI.java
 * @author Katherine Beegle, Stephen Schroeder
 * @date Dec. 1, 2009
 * GUI is in interface for NotFacebook. GUI displays the current profile and
 * friends and buttons to change status and picture and to add friend.
 */
public class GUI extends javax.swing.JFrame {

    /** Creates new form GUI */
    public GUI() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ADDButton = new javax.swing.JButton();
        DELETEButton = new javax.swing.JButton();
        LOOKUPButton = new javax.swing.JButton();
        StatusButton = new javax.swing.JButton();
        PicButton = new javax.swing.JButton();
        FriendButton = new javax.swing.JButton();
        StatusField = new javax.swing.JTextField();
        PicField = new javax.swing.JTextField();
        FriendField = new javax.swing.JTextField();
        NameField = new javax.swing.JTextField();
        NameLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        FriendArea = new javax.swing.JTextArea();
        ProfilePanel = new javax.swing.JPanel();
        PicLabel = new javax.swing.JLabel();
        CurrentNameField = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        CurrentStatusField = new javax.swing.JTextArea();
        Feedback = new javax.swing.JTextField();
        FriendsLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Not Facebook :D");

        ADDButton.setText("ADD");
        ADDButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ADDButtonActionPerformed(evt);
            }
        });

        DELETEButton.setText("DELETE");
        DELETEButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DELETEButtonActionPerformed(evt);
            }
        });

        LOOKUPButton.setText("LOOK UP");
        LOOKUPButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LOOKUPButtonActionPerformed(evt);
            }
        });

        StatusButton.setText("Change Status");
        StatusButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StatusButtonActionPerformed(evt);
            }
        });

        PicButton.setText("Change Pic");
        PicButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PicButtonActionPerformed(evt);
            }
        });

        FriendButton.setText("Add Friend");
        FriendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FriendButtonActionPerformed(evt);
            }
        });

        NameLabel.setText("Name:");

        FriendArea.setColumns(1);
        FriendArea.setRows(5);
        jScrollPane1.setViewportView(FriendArea);

        ProfilePanel.setBackground(new java.awt.Color(204, 204, 255));

        CurrentNameField.setEditable(false);

        CurrentStatusField.setColumns(1);
        CurrentStatusField.setEditable(false);
        CurrentStatusField.setRows(1);
        jScrollPane2.setViewportView(CurrentStatusField);

        javax.swing.GroupLayout ProfilePanelLayout = new javax.swing.GroupLayout(ProfilePanel);
        ProfilePanel.setLayout(ProfilePanelLayout);
        ProfilePanelLayout.setHorizontalGroup(
            ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ProfilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PicLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE)
                    .addComponent(CurrentNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 258, Short.MAX_VALUE))
                .addContainerGap())
        );
        ProfilePanelLayout.setVerticalGroup(
            ProfilePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ProfilePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PicLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 226, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(CurrentNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Feedback.setEditable(false);

        FriendsLabel.setText("Friends:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StatusField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(StatusButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PicButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(PicField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FriendButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(FriendField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ProfilePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)
                            .addComponent(FriendsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Feedback, javax.swing.GroupLayout.DEFAULT_SIZE, 166, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(NameLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ADDButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DELETEButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LOOKUPButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(NameLabel)
                    .addComponent(NameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ADDButton)
                    .addComponent(DELETEButton)
                    .addComponent(LOOKUPButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(FriendsLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 249, Short.MAX_VALUE)
                        .addGap(27, 27, 27)
                        .addComponent(Feedback, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(ProfilePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(StatusButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(StatusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(PicButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(PicField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(FriendButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(FriendField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Changes the status of CurrentProfile with status in StatusField.
     * @param evt
     */
    private void StatusButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StatusButtonActionPerformed
        if(CurrentProfile == NullProfile)
            Feedback.setText("Error: Select a Profile.");
        else{
            CurrentProfile.setStatus(StatusField.getText());
            updateCurrentProfile();
            Feedback.setText("Status Changed.");
            StatusField.setText("");
        }
        saveFile();
}//GEN-LAST:event_StatusButtonActionPerformed

    /**
     * Attmempts to change the picture of the CurrentProfile with picture in
     * PictureField.
     * @param evt
     */
    private void PicButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PicButtonActionPerformed
        if(CurrentProfile == NullProfile){
            Feedback.setText("Error: Select a Profile.");
        }else{
            if(CurrentProfile.setPicture(PicField.getText())){
                updateCurrentProfile();
                Feedback.setText("Picture Changed.");
                PicField.setText("");
            }
            else{
                Feedback.setText("Error: Invalid File.");
            }
        }
        saveFile();
}//GEN-LAST:event_PicButtonActionPerformed

    /**
     * Attempts to add a friend with name in NameField to CurrentProfile.
     * @param evt
     */
    private void FriendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FriendButtonActionPerformed
        String f = FriendField.getText();

        if(CurrentProfile == NullProfile){
            Feedback.setText("Error: Select a Profile.");
        }
        else if(CurrentProfile.getName().equals(f)){
            Feedback.setText("Error: Cannot add self as friend.");
        }
        else if(f.equals("")){
            Feedback.setText("Error: No name entered.");
        }
        else if(f.equals("null")){
            Feedback.setText("Error: Cannot add Null Profile as friend.");
        }
        else{
            Profile friendProfile = (Profile) NullProfile.getChild(f);
            if(friendProfile == null){
                Feedback.setText("Error: Friend not found.");
            }
            else{
                Friend friend = new Friend(friendProfile.getName());
                friendProfile.registerObserver(friend);
                CurrentProfile.add(friend);
                Friend profileFriend = new Friend(CurrentProfile.getName());
                CurrentProfile.registerObserver(profileFriend);
                friendProfile.add(profileFriend);
                updateCurrentProfile();
                Feedback.setText("Friend Added.");
                FriendField.setText("");
            }
        }
        saveFile();
}//GEN-LAST:event_FriendButtonActionPerformed

    /**
     * Attempts to add profile in NameField.
     * @param evt event
     */
    private void ADDButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ADDButtonActionPerformed
        if(!NameField.getText().equals("")){
            Profile profile = new Profile(NameField.getText());
            boolean added = NullProfile.add(profile);
            if(added){
                CurrentProfile = profile;
                updateCurrentProfile();
                Feedback.setText("Profile Added.");
                NameField.setText("");
            }else{
                Feedback.setText("Error: Profile already exists.");
            }
        }else{
            Feedback.setText("Error: Enter a Name.");
        }
        saveFile();
}//GEN-LAST:event_ADDButtonActionPerformed

    /**
     * Attempts to delete profile in NameField.
     * @param evt event
     */
    private void DELETEButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DELETEButtonActionPerformed
        if(CurrentProfile != NullProfile){
            CurrentProfile.setDie(true);
            CurrentProfile.notifyObservers();
            CurrentProfile.killAllChildren();
            NullProfile.remove(CurrentProfile);
            CurrentProfile = NullProfile;
            updateCurrentProfile();
            Feedback.setText("Profile Deleted.");
            NameField.setText("");
        }else{
            Feedback.setText("Error: Select a Profile to be Deleted.");
        }
        saveFile();
}//GEN-LAST:event_DELETEButtonActionPerformed

    /**
     * Looks for a profile in NameField.
     * @param evt event
     */
    private void LOOKUPButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LOOKUPButtonActionPerformed
        if(!NameField.getText().equals("")){
            Profile profile = (Profile) NullProfile.getChild(NameField.getText());
            if(profile != null){
                CurrentProfile = profile;
                updateCurrentProfile();
                Feedback.setText("Current Profile set to " + NameField.getText() + ".");
                NameField.setText("");
            }else{
                Feedback.setText("Error: Profile not Found.");
            }
        }else{
            Feedback.setText("Error: Enter a Name.");
        }
        saveFile();
}//GEN-LAST:event_LOOKUPButtonActionPerformed

    /**
     * Updates the current profile.
     */
    public void updateCurrentProfile(){
        CurrentProfile.killDeadChildren();
        CurrentNameField.setText(CurrentProfile.getName());
        CurrentStatusField.setText(CurrentProfile.getStatus());
        FriendArea.setText(CurrentProfile.getFriendString());
        ImageIcon pic = new ImageIcon(CurrentProfile.getPicture());
        PicLabel.setIcon(pic);
    }

    /**
     * Reads the save file.
     */
    public void readFile(){
        try {
            FileReader fstream = new FileReader("facebook.txt");
            BufferedReader in = new BufferedReader(fstream);
            try {
                while (in.read() != -1) {
                    String line = in.readLine();
                    String firstName, lastName, picture, status, friendFN, friendLN;
                    firstName = lastName = picture = status = friendFN = friendLN = "";
                    boolean foundFN, foundLN, foundP, foundS, foundFriendFN, foundFriendLN;
                    foundFN = foundLN = foundP = foundS = foundFriendFN = foundFriendLN = false;
                    Profile profile = null;
                    for(int i=0; i<line.length(); i++){
                        if(line.charAt(i) == '.'){
                            if(foundS){
                                profile.setStatus(status);
                                foundS = true;
                            }
                            else if(foundFriendFN && foundFriendLN){
                                Friend friend = new Friend(friendFN + " " + friendLN);
                                profile.add(friend);
                                foundFriendFN = foundFriendLN = false;
                            }
                        }
                        // First Name
                        else if(!foundFN){
                            if(line.charAt(i) == ','){
                                foundFN = true;
                            }
                            else
                                firstName += line.charAt(i);
                        }
                        // Last Name
                        else if(!foundLN){
                            if(line.charAt(i) == ','){
                                foundLN = true;
                                profile = new Profile(firstName + " " + lastName);
                            }
                            else
                                lastName += line.charAt(i);
                        }
                        // Picture
                        else if(!foundP){
                            if(line.charAt(i) == ','){
                                profile.setPicture(firstName);
                                foundP = true;
                            }
                            else
                                picture += line.charAt(i);
                        }
                        // Status
                        else if(!foundS){
                            if(line.charAt(i) == ','){
                                profile.setStatus(status);
                                foundS = true;
                            }
                            else
                                status += line.charAt(i);
                        }
                        // Friends
                        else{
                            if(foundFriendFN && foundFriendLN){
                                Friend friend = new Friend(friendFN + " " + friendLN);
                                profile.add(friend);
                                foundFriendFN = foundFriendLN = false;
                            }
                            else if(!foundFriendFN){
                               if(line.charAt(i) == ','){
                                   foundFriendFN = true;
                               }
                               else
                                   friendFN += line.charAt(i);
                            }
                            else if(!foundFriendLN){
                                if(line.charAt(i) == ','){
                                    foundFriendLN = true;
                                }
                                else
                                    friendLN += line.charAt(i);
                            }

                        }
                    }

                }
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * Writes the save file.
     */
    public void saveFile(){
         try{
            // Create file
            FileWriter fstream = new FileWriter("facebook.txt");
            BufferedWriter out = new BufferedWriter(fstream);

            for(int i = 0; i < NullProfile.friends.size(); i++){
                Profile profile = (Profile) NullProfile.friends.get(i);
                // Name
                String name = profile.getName();
                if(name.indexOf(' ') == -1){
                    // No last name, write only first name.
                    out.write(name + ",,");
                }
                else {
                    // Separate first and last name, then write.
                    String firstName = name.substring(0, name.indexOf(' '));
                    String lastName = name.substring(name.indexOf(' ')+1);
                    out.write(firstName + "," + lastName + ",");
                }
                // Picture
                out.write(profile.getPicture() + ",");
                // Status
                out.write(profile.getStatus());
                // Friends
                for(int j=0; j<profile.friends.size(); j++){
                    out.write(',');
                    Friend f = (Friend) profile.friends.get(j);
                    name = f.getName();
                    if(name.indexOf(' ') == -1){
                        // No last name, write only first name.
                        out.write(name + ",,");
                    }
                    else {
                        // Separate first and last name, then write.
                        String firstName = name.substring(0, name.indexOf(' '));
                        String lastName = name.substring(name.indexOf(' ')+1);
                        out.write(firstName + "," + lastName);
                    }
                }
                out.write(".");
                if(i != NullProfile.friends.size()-1){
                    out.newLine();
                }
            }

            //Close the output stream
            out.close();
        }catch (Exception e){
            //Catch exception if any
            System.err.println("Error: " + e.getMessage());
        }
    }

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    
    Profile NullProfile = new Profile("null");
    Profile CurrentProfile = NullProfile;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ADDButton;
    private javax.swing.JTextField CurrentNameField;
    private javax.swing.JTextArea CurrentStatusField;
    private javax.swing.JButton DELETEButton;
    private javax.swing.JTextField Feedback;
    private javax.swing.JTextArea FriendArea;
    private javax.swing.JButton FriendButton;
    private javax.swing.JTextField FriendField;
    private javax.swing.JLabel FriendsLabel;
    private javax.swing.JButton LOOKUPButton;
    private javax.swing.JTextField NameField;
    private javax.swing.JLabel NameLabel;
    private javax.swing.JButton PicButton;
    private javax.swing.JTextField PicField;
    private javax.swing.JLabel PicLabel;
    private javax.swing.JPanel ProfilePanel;
    private javax.swing.JButton StatusButton;
    private javax.swing.JTextField StatusField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables

}
